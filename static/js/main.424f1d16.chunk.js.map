{"version":3,"sources":["Components/navbar.js","Components/contactForm.js","Components/myJumbo.js","Components/myJumbo2.js","Components/myFooter.js","Components/skills.js","App.js","serviceWorker.js","index.js"],"names":["MyNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navOptions","name","href","react_default","a","createElement","Navbar","fixed","bg","variant","expand","Container","Toggle","aria-controls","Collapse","id","Nav","className","map","x","Link","key","NavDropdown","title","Item","download","Button","onClick","toggleContactMe","index_es","icon","faEnvelope","Component","ContactMe","Form","Group","controlId","Label","Control","type","placeholder","Text","FormControl","as","aria-label","MyJumbo","Jumbotron","style","backgroundColor","height","color","MyJumbo2","paddingTop","Media","width","src","alt","Body","MyFooter","wdith","cardStyle","border","cardData1","text","cardData2","maxHeight","Row","Col","sm","Card","Title","App","contactMeShow","bind","assertThisInitialized","setState","_this2","navbar","backgroundImage","backgroundSize","myJumbo","skills","myJumbo2","myFooter","Modal","show","onHide","Header","closeButton","contactForm","Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.424f1d16.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Nav, Navbar, NavDropdown, Container, Button } from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\nclass MyNav extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        navOptions : [\n         {\n             name: \"Home\", href: \"#home\"\n         }, {\n             name: \"Skills\", href:\"#skills\"\n         }\n        ]\n        }\n     };\n \n\n  componentDidMount(){\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n        {/* <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand> */}\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            { this.state.navOptions.map( (x) => { return <Nav.Link key={\"nav\"+x.name} href={x.href}>{x.name}</Nav.Link> } ) }\n\n            {/* <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                 <NavDropdown.Item href=\"#action/3.1\">Another action</NavDropdown.Item>\n                 <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                 <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown> */}\n            <NavDropdown title=\"Resume\" id=\"basic-nav-dropdown\">\n                 <NavDropdown.Item  href='vineet_agarwal_resume.pdf' download>pdf</NavDropdown.Item>\n            </NavDropdown> \n\n            </Nav>\n            <Nav>\n                <Nav.Link href=\"#deets\">\n                    <Button variant=\"outline-info\" onClick={this.props.toggleContactMe}> \n                        <FontAwesomeIcon icon= {faEnvelope} />\n                    </Button>\n                    </Nav.Link>\n                \n            </Nav>\n        </Navbar.Collapse>\n        </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default MyNav;\n\n","\nimport React, { Component } from 'react';\nimport { Form, Button, FormControl } from 'react-bootstrap';\n\nclass ContactMe extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        \n        }\n     };\n \n\n  componentDidMount(){\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n            <Form.Text className=\"text-muted\">\n            I will never share your email with anyone else.\n            </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Name\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"Message\">\n            <FormControl as=\"textarea\" placeholder=\"Message\" aria-label=\"With textarea\" />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default ContactMe;\n\n","\nimport React, { Component } from 'react';\nimport { Jumbotron } from 'react-bootstrap';\n// import { url } from 'inspector';\n\nclass MyJumbo extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        \n        }\n     };\n \n\n  componentDidMount(){\n  }\n\n  render() {\n    return (\n      <div >\n        <Jumbotron style= {{backgroundColor: \"#e9ecef00\", height:500, color:\"#FFFFFF\"}}>\n            <h1> <strong> Hi !</strong></h1>\n            <h3>My name is Vineet</h3>\n            <h5>\n            I am a Data Scientist and Developer based in Colorado Front Range.\n            </h5>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default MyJumbo;\n\n","import React, { Component } from 'react';\nimport {Media, Container} from 'react-bootstrap';\n\nclass MyJumbo2 extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        \n     };\n    }\n \n  componentDidMount(){\n  }\n\n  render() {\n      return      (\n      <div style={{height:200 ,paddingTop:50, backgroundColor:\"#4f7dc5\", color:\"#FFFFFF\"}}> \n        <Container>\n        <Media>\n            <img\n                width={128}\n                height={128}\n                className=\"mr-3\"\n                src=\"./headshot.png\"\n                alt=\"Generic placeholder\"\n            />\n            <Media.Body>\n                <p>\n                When I am not working, I enjoy Skiing, Camping and Hiking in the Rocky Mountains with my wife and daughter. I also like photography and gardening.\n            I intend to improve my portfolio website and showcase my skills better over the next few months.\n                </p>\n            </Media.Body>\n            </Media>\n            {/* When I am not working, I enjoy Skiing, Camping and Hiking in the Rocky Mountains with my wife and daughter. \n            I intend to improve my portfolio website and showcase my skills better over the next few months.  */}\n        </Container>\n      </div>\n      )\n  }\n}\n\nexport default MyJumbo2;\n\n","import React, { Component } from 'react';\n// import { SocialIcon } from 'react-social-icons';\n// import { Row, Col, Card, Container} from 'react-bootstrap';\n\nclass MyFooter extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        \n     };\n    }\n \n  componentDidMount(){\n  }\n\n  render() {\n      return      (\n      <div style={{height:100 , wdith:\"100%\",paddingTop:50, backgroundColor:\"#212529\", color:\"#FFFFFF\"}}> \n      {/* <SocialIcon url=\"https://github.com/vineetagarwal208/\" />\n      <SocialIcon url=\"https://www.flickr.com/people/34116998@N04/\" /> */}\n      Vineet Agarwal, Copyright, 2019\n      \n      </div>\n      )\n  }\n}\n\nexport default MyFooter;\n\n","\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Container, Jumbotron} from 'react-bootstrap';\n\nconst cardStyle = {border:\"none\",\n                    width: '18rem' }\nclass MyNav extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n        cardData1 : [\n            {\n                title: \"Web Apps\",\n                text: \"I have years of experience developing Web Apps using Javascript, ReactJS and AngularJS and building REST APIs\"\n            },\n            {\n                title: \"Big Data Pipelines\",\n                text: \"I enjoy developing efficient and scalable pipelines to transform and store data. I am comfortable working with Spark, Hive etc.\"\n                },\n            {\n                title: \"Data Visualization\",\n                text: \"Good data visualizations are essential to story telling. I love developing dynamic data visualizations for responsive web apps\"\n                },\n        ],\n        cardData2 : [\n            {\n                title: \"Statistical Models\",\n                text: \"Including but not limited to Regression, Clustering, SVMs and Trees  \"\n            },\n            {\n                title: \"Deep Learning\",\n                text: \"I find NNs to be a very interesting topic. I have worked with CNNs for image detection\"\n                },\n            {\n                title: \"Automation\",\n                text: \"It you can repeat it, I can automate it so you can spend time on better things\"\n                },\n        ]\n     };\n    }\n \n  componentDidMount(){\n  }\n\n  render() {\n    return (\n        <Container >\n            <Jumbotron style={{backgroundColor:\"white\", maxHeight:100}} > <h2>What I can build ? </h2></Jumbotron>\n        <Row style={{paddingTop:30}}>\n            {this.state.cardData1.map((x) => {\n                return (\n                    <Col sm key={\"skills\"+x.title}>\n                    <Card style={cardStyle}>\n                    <Card.Body>\n                        <Card.Title> <h3>{x.title}</h3></Card.Title>\n                        <Card.Text>\n                             {x.text}\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n                    </Col>\n                )\n            })}\n        </Row>\n        <Row>\n            {this.state.cardData2.map((x) => {\n                return (\n                    <Col sm key={\"skills\"+x.title}>\n                    <Card style={cardStyle}>\n                    <Card.Body>\n                        <Card.Title> <h3>{x.title}</h3></Card.Title>\n                        <Card.Text>\n                             {x.text}\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n                    </Col>\n                )\n            })}\n        </Row>\n        </Container>\n    );\n  }\n}\n\nexport default MyNav;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport MyNav from './Components/navbar'\nimport ContactMe from './Components/contactForm';\nimport { Modal, Row, Col } from 'react-bootstrap';\nimport MyJumbo from './Components/myJumbo';\nimport MyJumbo2 from './Components/myJumbo2'\nimport MyFooter from './Components/myFooter'\nimport Skills from './Components/skills'\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      contactMeShow: false\n    };\n    this.toggleContactMe = this.toggleContactMe.bind(this);\n  }\n\n  toggleContactMe() {\n    this.setState({ contactMeShow: !this.state.contactMeShow })\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n\n          <Row id=\"home\">\n            <Col>\n            <MyNav toggleContactMe={this.toggleContactMe} />\n            </Col>\n          </Row>\n          <Row style={{paddingTop:70, backgroundImage: `url(\"./indian_peaks.jpg\")`, backgroundSize: \"cover\"}}>\n            <Col >\n              <MyJumbo />\n            </Col>\n          </Row>\n          {/* <Row id=\"skills\" style={{height:1000, width:'100%'}}>\n          </Row> */}\n          <div id='skills'>\n          <Skills id=\"skills\"/>\n          </div>\n          <Row >\n            <Col >\n              <MyJumbo2 />\n            </Col>\n          </Row>\n\n          <Row >\n            <Col >\n              <MyFooter />\n            </Col>\n          </Row>\n          \n\n        <Modal show={this.state.contactMeShow} onHide={(x) => { this.toggleContactMe() }}>\n          <Modal.Header closeButton>\n            <Modal.Title>Contact Me</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ContactMe />\n          </Modal.Body>\n          <Modal.Footer>\n\n          </Modal.Footer>\n        </Modal>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}